package {{PackageName}}

import (
    "fmt"
    "github.com/gin-gonic/gin"
    "gorm.io/gorm/clause"
    "server/pkg/app"
    "server/pkg/database"
    "server/pkg/paginator"
)

func Get(id string, loading bool) ({{VariableName}} {{StructName}}) {
    if loading {
        database.DB.Preload(clause.Associations).Where("id", id).First(&{{VariableName}})
    } else {
        database.DB.Where("id", id).First(&{{VariableName}})
    }
    return
}

func GetBy(field, value string) ({{VariableName}} {{StructName}}) {
    database.DB.Where("? = ?", field, value).First(&{{VariableName}})
    return
}

func All() ({{VariableNamePlural}} []{{StructName}}) {
    database.DB.Find(&{{VariableNamePlural}})
    return
}

func IsExist(field, value string) bool {
    var count int64
    database.DB.Model(Project{}).Where(fmt.Sprintf("%v = ?", field), value).Count(&count)
    return count > 0
}

// Paginate 分页内容
func Paginate(c *gin.Context, perPage int) ({{VariableNamePlural}} []{{StructName}}, paging paginator.Paging) {
	query := database.DB.Model({{StructName}}{})
	if c.Query("id") != "" {
		query = query.Where("id = ?", c.Query("id"))
	}
	if c.Query("name") != "" {
		query = query.Where("name like ?", "%"+c.Query("name")+"%")
	}
	if c.Query("state") != "" {
		query = query.Where("state = ?", c.Query("state"))
	}
	paging = paginator.Paginate(
		c,
		query,
		&{{VariableNamePlural}},
		app.V1URL(database.TableName(&{{StructName}}{})),
		perPage,
	)
	return
}